spring.application.name=keycloak-auth-service
server.port=8087
spring.datasource.url=jdbc:h2:mem:customers-db
spring.h2.console.enabled=true

management.endpoints.web.exposure.include=*

eureka.client.serviceUrl.defaultZone=http://discovery-service:8061/eureka/
#eureka.client.serviceUrl.defaultZone=http://localhost:8061/eureka/

eureka.instance.preferIpAddress=true

spring.output.ansi.enabled=always


# Keycloak properties
keycloak.auth-server-url=http://keycloak-postgres-server:8080
#keycloak.auth-server-url=http://localhost:8081
keycloak.realm=ec-realm
keycloak.resource=ec-client
keycloak.credentials.secret=3an2hV7l6GoIreW8wyi8D0uH2bZgEN6B
keycloak.client-id=ec-client
keycloak.grant-type=password
keycloak.name=admin
keycloak.password=admin@123

# Optional: Spring Security OAuth2 Resource Server properties (if needed)
# If these are used by other parts of your configuration, keep them.
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://keycloak-postgres-server:8080/realms/ec-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWT_JWK_SET_URI:http://keycloak-postgres-server:8080/realms/ec-realm/protocol/openid-connect/certs}

#spring.security.oauth2.client.registration.ebank-client.client-id=ec-client
#spring.security.oauth2.client.registration.ebank-client.client-secret=3an2hV7l6GoIreW8wyi8D0uH2bZgEN6B
#spring.security.oauth2.client.registration.ebank-client.authorization-grant-type=password
#spring.security.oauth2.client.registration.ebank-client.redirect-uri=http://keycloak-postgres-server:8087/login/oauth2/code/ec-client
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak-postgres-server:8080/auth/realms/ec-realm

spring.docker.compose.enabled=false
